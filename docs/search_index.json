[["analysis.html", "Section 2 Analysis ", " Section 2 Analysis "],["daily-download-of-r-packages.html", "2.1 Daily download of R-packages", " 2.1 Daily download of R-packages Finding 1: There was unusual download activity in one day of 2014 and 2018. In this section, we study the daily downloads of CRAN packages from 2012-10-01 to 2021-04-30. The data is obtained from the cranlogs package, which includes a summary of the download logs from the RStudio CRAN mirror. The daily download data for CRAN packages are available from 1st October 2012. Examination of this data showed two unusual observations in XX and XX as shown in Figure 2.1. [ADD] Any explanations to why these spikes occured? Figure 2.1: Unusual download spikes on XX and XX. Finding 2: Weekends have a lower download than weekdays. The two unusual observations are removed for futher investigation. Figure 2.2 shows the daily download of all CRAN packages from the RStudio mirror with the grey areas highlighting the weekend. Figure 2.2: The figure shows the total downloads of all packages on CRAN would decrease on weekends. [ET: this paragraph needs to be made clear.] We could know that there seems to have strong seasonality, which indicates that in a week, the total downloads always increases first then decreases, and reaches the lowest at the weekend. What’s more, the downloads is on the rise from August to October and from February to April, which may be due to the start of semester for most universities. Finding 3: There is an increasing number of downloads over time. This likely attests to the growing number of R users. Figure 2.3: The above figure shows the download trend over time. "],["daily-downloads-of-r.html", "2.2 Daily downloads of R", " 2.2 Daily downloads of R ## . ## 2.0.0 2.0.1 2.1.0 2.1.1 2.10.0 ## 299 197 222 278 1455 ## 2.10.1 2.11.0 2.11.1 2.12.0 2.12.1 ## 1431 1681 1719 1387 1317 ## 2.12.2 2.13.0 2.13.1 2.13.2 2.14.0 ## 1346 1571 1532 1950 1605 ## 2.14.1 2.14.2 2.15.0 2.15.1 2.15.2 ## 1732 1644 2151 1995 1845 ## 2.15.3 2.2.0 2.2.1 2.2.1pat 2.3.0 ## 2830 280 267 42 242 ## 2.3.1 2.4.0 2.4.1 2.5.0 2.5.1 ## 255 265 275 285 289 ## 2.6.0 2.6.1 2.6.2 2.7.0 2.7.1 ## 272 238 257 281 263 ## 2.7.2 2.8.0 2.8.1 2.9.0 2.9.1 ## 245 282 302 302 280 ## 2.9.2 3.0.0 3.0.1 3.0.2 3.0.3 ## 379 2476 2469 2450 3209 ## 3.1.0 3.1.1 3.1.2 3.1.2patched 3.1.3 ## 3144 3378 3770 54 3150 ## 3.1.3beta 3.1.3patched 3.1.3rc 3.2.0 3.2.0alpha ## 3 37 14 2719 13 ## 3.2.0beta 3.2.0patched 3.2.0rc 3.2.1 3.2.1beta ## 8 50 12 4348 3 ## 3.2.1patched 3.2.1rc 3.2.2 3.2.2beta 3.2.2patched ## 41 14 3531 5 71 ## 3.2.2rc 3.2.3 3.2.3beta 3.2.3patched 3.2.3rc ## 11 3047 2 69 6 ## 3.2.4 3.2.4beta 3.2.4patched 3.2.4rc 3.2.4revised ## 2068 2 20 6 463 ## 3.2.5 3.2.5patched 3.3.0 3.3.0alpha 3.3.0beta ## 1910 8 3219 4 17 ## 3.3.0patched 3.3.0rc 3.3.1 3.3.1beta 3.3.1patched ## 29 4 2829 2 70 ## 3.3.1rc 3.3.2 3.3.2patched 3.3.2rc 3.3.3 ## 6 2927 75 4 4108 ## 3.3.3patched 3.3.3rc 3.4.0 3.4.0alpha 3.4.0beta ## 32 7 3343 10 5 ## 3.4.0patched 3.4.0rc 3.4.1 3.4.1beta 3.4.1patched ## 46 4 3133 2 58 ## 3.4.1rc 3.4.2 3.4.2beta 3.4.2patched 3.4.2rc ## 4 2538 1 35 4 ## 3.4.3 3.4.3beta 3.4.3patched 3.4.3rc 3.4.4 ## 3083 3 55 4 3163 ## 3.4.4patched 3.4.4rc 3.5.0 3.5.0alpha 3.5.0beta ## 9 8 2898 9 3 ## 3.5.0patched 3.5.0rc 3.5.1 3.5.1patched 3.5.1rc ## 30 8 2947 144 2 ## 3.5.2 3.5.2beta 3.5.2patched 3.5.2rc 3.5.3 ## 2228 2 99 6 2282 ## 3.5.3beta 3.5.3patched 3.5.3rc 3.6.0 3.6.0alpha ## 1 53 9 2110 19 ## 3.6.0beta 3.6.0patched 3.6.0rc 3.6.1 3.6.1beta ## 8 85 10 2129 6 ## 3.6.1patched 3.6.1rc 3.6.2 3.6.2.nn 3.6.2beta ## 228 11 1492 480 3 ## 3.6.2patched 3.6.2rc 3.6.3 3.6.3.nn 3.6.3beta ## 96 9 1298 422 10 ## 3.6.3patched 3.6.3rc 4.0.0 4.0.0alpha 4.0.0beta ## 55 7 1117 18 6 ## 4.0.0patched 4.0.0rc 4.0.1 4.0.1beta 4.0.1patched ## 47 8 828 6 17 ## 4.0.1rc 4.0.2 4.0.2beta 4.0.2patched 4.0.2rc ## 11 965 3 120 9 ## 4.0.3 4.0.3beta 4.0.3patched 4.0.3rc 4.0.4 ## 633 8 132 22 227 ## 4.0.4beta 4.0.4patched 4.0.4rc 4.0.5 4.0.5beta ## 3 45 10 98 4 ## 4.0.5patched 4.0.5rc 4.1.0alpha devel devel.exe ## 31 4 10 1819 1 ## latest patched.exe release release.exe ## 4928 106 370 138 "],["compare-last-years-downloads-with-the-earliest-release-date.html", "2.3 Compare last year’s downloads with the earliest release date", " 2.3 Compare last year’s downloads with the earliest release date Finding x: Packages that were initially released earlier on CRAN have a higher download in the past year. This perhaps is because … [ET: removed plots to replace with above. Comments left as is.] In our common cognition, we think that the earlier a package is released, the more people will know about it, and thus the more downloads it will have. However, packages related to different topics cannot be directly compared, because it is possible that the total download amount of packages in a certain topic is higher than that in another topic. Therefore, in order to test this conjecture as clearly as possible, I selected three domain packages through CRAN task view, calculated their respective downloads in the previous half a year, and found their earliest release dates for comparison. Packages for Time Series Analysis The first topic is Time Series Analysis. Time Series Analysis is a statistical technique that deals with time series data, or trend analysis. Time series data means that data is in a series of particular time periods or intervals(“Time Series Analysis” 2020). Table ?? shows the first 15 timeseries packages along with their earliest release date and last half year’s total counts. It can be seen that lubridate ranks first on download count with release date XX. Except that, other first four packages are all released before 2010, which is over 10 years ago. Figure ?? displays the scatterplot of the last half year’s download count and the earliest release date of timeseries packages. It can be seen that generally, as the earliest release date gets later and later, the number of download logs becomes lower and lower. And most of the high downloaded packages are from a period of time between 2004 and 2011. For timeseries packages, they are mainly released between 2012 and 2019. Bayesian packages for general model fitting The second topic is Bayesian Inference. Bayesian statistics is a mathematical procedure that applies probabilities to statistical problems. It provides people the tools to update their beliefs in the evidence of new data(perpetual 2019). Table ?? shows the first 15 econometric packages along with their earliest release date and last half year’s total counts. It can be seen that the first-rank package is XX released on XX. All the top 3 packages are released before 2005, and all the top 10 packages comes before 2010. It can be seen from Figure ?? that similarly, the earlier packages is released, the more downloads it will have. And most of the packages are from 2007 to 2012. Econometrics In order to test whether this is the case in other areas, let’s turn our attention to econometrics packages. Econometrics is the use of statistical methods using quantitative data to develop theories or test existing hypotheses in economics or finance, which relies on techniques such as regression models and null hypothesis testing(Hayes 2020). Table ?? shows the first 15 econometric packages along with their earliest release date and last half year’s total counts. It can be seen that the first-rank package is zoo released on XX. All the top 3 packages are released before 2005, and all the top 10 packages comes before 2010. In Figure ??, as we can see, for this kind of package, the download volume decreases more obviously with the release date, which is quite consistent with both timeseries and bayesian situations. And most of the packages are centered between 2013 and 2016. In conclusion, I’m not surprised to find that the earlier the package is released, the more downloads it will has, which is reflected in bayesian, econometrics, time series cases. That is because,t he packages released earlier will be better known. When they are released early, there may be a relatively small number of packages of the same type, so the competition is relatively small. In contrast, the packages released later can easily be covered up, because people tend to use the well-known, mature and habitual packages. References "]]
